// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// @ts-ignore
import { GraphQLDateTime as DateTime } from "graphql-iso-date";
import { GraphQLID as ID } from "graphql";

// @ts-ignore
import {
  ArgsType,
  Field as TypeGraphQLField,
  Float,
  InputType as TypeGraphQLInputType,
  Int
} from "type-graphql";
// @ts-ignore
import { registerEnumType } from "type-graphql";

// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require("graphql-type-json");

// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs } from "../../../src";
// @ts-ignore
import { Card } from "../src/modules/card/card.model";

export enum CardOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC",

  nationalPokedexNumber_ASC = "nationalPokedexNumber_ASC",
  nationalPokedexNumber_DESC = "nationalPokedexNumber_DESC",

  types_ASC = "types_ASC",
  types_DESC = "types_DESC",

  subtype_ASC = "subtype_ASC",
  subtype_DESC = "subtype_DESC",

  supertype_ASC = "supertype_ASC",
  supertype_DESC = "supertype_DESC",

  hp_ASC = "hp_ASC",
  hp_DESC = "hp_DESC",

  number_ASC = "number_ASC",
  number_DESC = "number_DESC",

  artist_ASC = "artist_ASC",
  artist_DESC = "artist_DESC",

  rarity_ASC = "rarity_ASC",
  rarity_DESC = "rarity_DESC",

  series_ASC = "series_ASC",
  series_DESC = "series_DESC",

  set_ASC = "set_ASC",
  set_DESC = "set_DESC",

  setCode_ASC = "setCode_ASC",
  setCode_DESC = "setCode_DESC",

  retreatCost_ASC = "retreatCost_ASC",
  retreatCost_DESC = "retreatCost_DESC",

  convertedRetreatCost_ASC = "convertedRetreatCost_ASC",
  convertedRetreatCost_DESC = "convertedRetreatCost_DESC",

  text_ASC = "text_ASC",
  text_DESC = "text_DESC",

  attackDamage_ASC = "attackDamage_ASC",
  attackDamage_DESC = "attackDamage_DESC",

  attackCost_ASC = "attackCost_ASC",
  attackCost_DESC = "attackCost_DESC",

  attackName_ASC = "attackName_ASC",
  attackName_DESC = "attackName_DESC",

  attackText_ASC = "attackText_ASC",
  attackText_DESC = "attackText_DESC",

  weaknesses_ASC = "weaknesses_ASC",
  weaknesses_DESC = "weaknesses_DESC",

  resistances_ASC = "resistances_ASC",
  resistances_DESC = "resistances_DESC",

  ancientTrait_ASC = "ancientTrait_ASC",
  ancientTrait_DESC = "ancientTrait_DESC",

  abilityName_ASC = "abilityName_ASC",
  abilityName_DESC = "abilityName_DESC",

  abilityText_ASC = "abilityText_ASC",
  abilityText_DESC = "abilityText_DESC",

  abilityType_ASC = "abilityType_ASC",
  abilityType_DESC = "abilityType_DESC",

  evolvesFrom_ASC = "evolvesFrom_ASC",
  evolvesFrom_DESC = "evolvesFrom_DESC",

  contains_ASC = "contains_ASC",
  contains_DESC = "contains_DESC",

  imageUrl_ASC = "imageUrl_ASC",
  imageUrl_DESC = "imageUrl_DESC",

  imageUrlHiRes_ASC = "imageUrlHiRes_ASC",
  imageUrlHiRes_DESC = "imageUrlHiRes_DESC",

  ability_ASC = "ability_ASC",
  ability_DESC = "ability_DESC",

  attacks_ASC = "attacks_ASC",
  attacks_DESC = "attacks_DESC"
}

registerEnumType(CardOrderByEnum, {
  name: "CardOrderByInput"
});

@TypeGraphQLInputType()
export class CardWhereInput {
  @TypeGraphQLField(() => String, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField({ nullable: true })
  createdAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  updatedAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField({ nullable: true })
  deletedAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_contains?: string;

  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  nationalPokedexNumber_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  nationalPokedexNumber_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  nationalPokedexNumber_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  nationalPokedexNumber_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  nationalPokedexNumber_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  nationalPokedexNumber_in?: number[];

  @TypeGraphQLField({ nullable: true })
  types_eq?: string;

  @TypeGraphQLField({ nullable: true })
  types_contains?: string;

  @TypeGraphQLField({ nullable: true })
  types_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  types_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  types_in?: string[];

  @TypeGraphQLField({ nullable: true })
  subtype_eq?: string;

  @TypeGraphQLField({ nullable: true })
  subtype_contains?: string;

  @TypeGraphQLField({ nullable: true })
  subtype_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  subtype_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  subtype_in?: string[];

  @TypeGraphQLField({ nullable: true })
  supertype_eq?: string;

  @TypeGraphQLField({ nullable: true })
  supertype_contains?: string;

  @TypeGraphQLField({ nullable: true })
  supertype_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  supertype_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  supertype_in?: string[];

  @TypeGraphQLField({ nullable: true })
  hp_eq?: string;

  @TypeGraphQLField({ nullable: true })
  hp_contains?: string;

  @TypeGraphQLField({ nullable: true })
  hp_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  hp_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  hp_in?: string[];

  @TypeGraphQLField({ nullable: true })
  number_eq?: string;

  @TypeGraphQLField({ nullable: true })
  number_contains?: string;

  @TypeGraphQLField({ nullable: true })
  number_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  number_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  number_in?: string[];

  @TypeGraphQLField({ nullable: true })
  artist_eq?: string;

  @TypeGraphQLField({ nullable: true })
  artist_contains?: string;

  @TypeGraphQLField({ nullable: true })
  artist_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  artist_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  artist_in?: string[];

  @TypeGraphQLField({ nullable: true })
  rarity_eq?: string;

  @TypeGraphQLField({ nullable: true })
  rarity_contains?: string;

  @TypeGraphQLField({ nullable: true })
  rarity_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  rarity_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  rarity_in?: string[];

  @TypeGraphQLField({ nullable: true })
  series_eq?: string;

  @TypeGraphQLField({ nullable: true })
  series_contains?: string;

  @TypeGraphQLField({ nullable: true })
  series_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  series_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  series_in?: string[];

  @TypeGraphQLField({ nullable: true })
  set_eq?: string;

  @TypeGraphQLField({ nullable: true })
  set_contains?: string;

  @TypeGraphQLField({ nullable: true })
  set_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  set_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  set_in?: string[];

  @TypeGraphQLField({ nullable: true })
  setCode_eq?: string;

  @TypeGraphQLField({ nullable: true })
  setCode_contains?: string;

  @TypeGraphQLField({ nullable: true })
  setCode_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  setCode_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  setCode_in?: string[];

  @TypeGraphQLField({ nullable: true })
  retreatCost_eq?: string;

  @TypeGraphQLField({ nullable: true })
  retreatCost_contains?: string;

  @TypeGraphQLField({ nullable: true })
  retreatCost_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  retreatCost_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  retreatCost_in?: string[];

  @TypeGraphQLField({ nullable: true })
  convertedRetreatCost_eq?: string;

  @TypeGraphQLField({ nullable: true })
  convertedRetreatCost_contains?: string;

  @TypeGraphQLField({ nullable: true })
  convertedRetreatCost_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  convertedRetreatCost_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  convertedRetreatCost_in?: string[];

  @TypeGraphQLField({ nullable: true })
  text_eq?: string;

  @TypeGraphQLField({ nullable: true })
  text_contains?: string;

  @TypeGraphQLField({ nullable: true })
  text_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  text_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  text_in?: string[];

  @TypeGraphQLField({ nullable: true })
  attackDamage_eq?: string;

  @TypeGraphQLField({ nullable: true })
  attackDamage_contains?: string;

  @TypeGraphQLField({ nullable: true })
  attackDamage_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  attackDamage_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  attackDamage_in?: string[];

  @TypeGraphQLField({ nullable: true })
  attackCost_eq?: string;

  @TypeGraphQLField({ nullable: true })
  attackCost_contains?: string;

  @TypeGraphQLField({ nullable: true })
  attackCost_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  attackCost_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  attackCost_in?: string[];

  @TypeGraphQLField({ nullable: true })
  attackName_eq?: string;

  @TypeGraphQLField({ nullable: true })
  attackName_contains?: string;

  @TypeGraphQLField({ nullable: true })
  attackName_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  attackName_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  attackName_in?: string[];

  @TypeGraphQLField({ nullable: true })
  attackText_eq?: string;

  @TypeGraphQLField({ nullable: true })
  attackText_contains?: string;

  @TypeGraphQLField({ nullable: true })
  attackText_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  attackText_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  attackText_in?: string[];

  @TypeGraphQLField({ nullable: true })
  weaknesses_eq?: string;

  @TypeGraphQLField({ nullable: true })
  weaknesses_contains?: string;

  @TypeGraphQLField({ nullable: true })
  weaknesses_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  weaknesses_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  weaknesses_in?: string[];

  @TypeGraphQLField({ nullable: true })
  resistances_eq?: string;

  @TypeGraphQLField({ nullable: true })
  resistances_contains?: string;

  @TypeGraphQLField({ nullable: true })
  resistances_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  resistances_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  resistances_in?: string[];

  @TypeGraphQLField({ nullable: true })
  ancientTrait_eq?: string;

  @TypeGraphQLField({ nullable: true })
  ancientTrait_contains?: string;

  @TypeGraphQLField({ nullable: true })
  ancientTrait_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  ancientTrait_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  ancientTrait_in?: string[];

  @TypeGraphQLField({ nullable: true })
  abilityName_eq?: string;

  @TypeGraphQLField({ nullable: true })
  abilityName_contains?: string;

  @TypeGraphQLField({ nullable: true })
  abilityName_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  abilityName_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  abilityName_in?: string[];

  @TypeGraphQLField({ nullable: true })
  abilityText_eq?: string;

  @TypeGraphQLField({ nullable: true })
  abilityText_contains?: string;

  @TypeGraphQLField({ nullable: true })
  abilityText_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  abilityText_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  abilityText_in?: string[];

  @TypeGraphQLField({ nullable: true })
  abilityType_eq?: string;

  @TypeGraphQLField({ nullable: true })
  abilityType_contains?: string;

  @TypeGraphQLField({ nullable: true })
  abilityType_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  abilityType_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  abilityType_in?: string[];

  @TypeGraphQLField({ nullable: true })
  evolvesFrom_eq?: string;

  @TypeGraphQLField({ nullable: true })
  evolvesFrom_contains?: string;

  @TypeGraphQLField({ nullable: true })
  evolvesFrom_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  evolvesFrom_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  evolvesFrom_in?: string[];

  @TypeGraphQLField({ nullable: true })
  contains_eq?: string;

  @TypeGraphQLField({ nullable: true })
  contains_contains?: string;

  @TypeGraphQLField({ nullable: true })
  contains_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  contains_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  contains_in?: string[];

  @TypeGraphQLField({ nullable: true })
  imageUrl_eq?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrl_contains?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrl_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrl_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  imageUrl_in?: string[];

  @TypeGraphQLField({ nullable: true })
  imageUrlHiRes_eq?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrlHiRes_contains?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrlHiRes_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrlHiRes_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  imageUrlHiRes_in?: string[];

  @TypeGraphQLField({ nullable: true })
  ability_eq?: string;

  @TypeGraphQLField({ nullable: true })
  ability_contains?: string;

  @TypeGraphQLField({ nullable: true })
  ability_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  ability_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  ability_in?: string[];

  @TypeGraphQLField({ nullable: true })
  attacks_eq?: string;

  @TypeGraphQLField({ nullable: true })
  attacks_contains?: string;

  @TypeGraphQLField({ nullable: true })
  attacks_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  attacks_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  attacks_in?: string[];
}

@TypeGraphQLInputType()
export class CardWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class CardCreateInput {
  @TypeGraphQLField()
  name!: string;

  @TypeGraphQLField({ nullable: true })
  nationalPokedexNumber?: number;

  @TypeGraphQLField({ nullable: true })
  types?: string;

  @TypeGraphQLField({ nullable: true })
  subtype?: string;

  @TypeGraphQLField({ nullable: true })
  supertype?: string;

  @TypeGraphQLField({ nullable: true })
  hp?: string;

  @TypeGraphQLField({ nullable: true })
  number?: string;

  @TypeGraphQLField({ nullable: true })
  artist?: string;

  @TypeGraphQLField({ nullable: true })
  rarity?: string;

  @TypeGraphQLField({ nullable: true })
  series?: string;

  @TypeGraphQLField({ nullable: true })
  set?: string;

  @TypeGraphQLField({ nullable: true })
  setCode?: string;

  @TypeGraphQLField({ nullable: true })
  retreatCost?: string;

  @TypeGraphQLField({ nullable: true })
  convertedRetreatCost?: string;

  @TypeGraphQLField({ nullable: true })
  text?: string;

  @TypeGraphQLField({ nullable: true })
  attackDamage?: string;

  @TypeGraphQLField({ nullable: true })
  attackCost?: string;

  @TypeGraphQLField({ nullable: true })
  attackName?: string;

  @TypeGraphQLField({ nullable: true })
  attackText?: string;

  @TypeGraphQLField({ nullable: true })
  weaknesses?: string;

  @TypeGraphQLField({ nullable: true })
  resistances?: string;

  @TypeGraphQLField({ nullable: true })
  ancientTrait?: string;

  @TypeGraphQLField({ nullable: true })
  abilityName?: string;

  @TypeGraphQLField({ nullable: true })
  abilityText?: string;

  @TypeGraphQLField({ nullable: true })
  abilityType?: string;

  @TypeGraphQLField({ nullable: true })
  evolvesFrom?: string;

  @TypeGraphQLField({ nullable: true })
  contains?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrl?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrlHiRes?: string;

  @TypeGraphQLField({ nullable: true })
  ability?: string;

  @TypeGraphQLField({ nullable: true })
  attacks?: string;
}

@TypeGraphQLInputType()
export class CardUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;

  @TypeGraphQLField({ nullable: true })
  nationalPokedexNumber?: number;

  @TypeGraphQLField({ nullable: true })
  types?: string;

  @TypeGraphQLField({ nullable: true })
  subtype?: string;

  @TypeGraphQLField({ nullable: true })
  supertype?: string;

  @TypeGraphQLField({ nullable: true })
  hp?: string;

  @TypeGraphQLField({ nullable: true })
  number?: string;

  @TypeGraphQLField({ nullable: true })
  artist?: string;

  @TypeGraphQLField({ nullable: true })
  rarity?: string;

  @TypeGraphQLField({ nullable: true })
  series?: string;

  @TypeGraphQLField({ nullable: true })
  set?: string;

  @TypeGraphQLField({ nullable: true })
  setCode?: string;

  @TypeGraphQLField({ nullable: true })
  retreatCost?: string;

  @TypeGraphQLField({ nullable: true })
  convertedRetreatCost?: string;

  @TypeGraphQLField({ nullable: true })
  text?: string;

  @TypeGraphQLField({ nullable: true })
  attackDamage?: string;

  @TypeGraphQLField({ nullable: true })
  attackCost?: string;

  @TypeGraphQLField({ nullable: true })
  attackName?: string;

  @TypeGraphQLField({ nullable: true })
  attackText?: string;

  @TypeGraphQLField({ nullable: true })
  weaknesses?: string;

  @TypeGraphQLField({ nullable: true })
  resistances?: string;

  @TypeGraphQLField({ nullable: true })
  ancientTrait?: string;

  @TypeGraphQLField({ nullable: true })
  abilityName?: string;

  @TypeGraphQLField({ nullable: true })
  abilityText?: string;

  @TypeGraphQLField({ nullable: true })
  abilityType?: string;

  @TypeGraphQLField({ nullable: true })
  evolvesFrom?: string;

  @TypeGraphQLField({ nullable: true })
  contains?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrl?: string;

  @TypeGraphQLField({ nullable: true })
  imageUrlHiRes?: string;

  @TypeGraphQLField({ nullable: true })
  ability?: string;

  @TypeGraphQLField({ nullable: true })
  attacks?: string;
}

@ArgsType()
export class CardWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => CardWhereInput, { nullable: true })
  where?: CardWhereInput;

  @TypeGraphQLField(() => CardOrderByEnum, { nullable: true })
  orderBy?: CardOrderByEnum;
}

@ArgsType()
export class CardCreateManyArgs {
  @TypeGraphQLField(() => [CardCreateInput])
  data!: CardCreateInput[];
}

@ArgsType()
export class CardUpdateArgs {
  @TypeGraphQLField() data!: CardUpdateInput;
  @TypeGraphQLField() where!: CardWhereUniqueInput;
}
